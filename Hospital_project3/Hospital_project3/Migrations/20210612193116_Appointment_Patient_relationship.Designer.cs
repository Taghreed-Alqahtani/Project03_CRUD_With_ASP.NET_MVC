// <auto-generated />
using Hospital_project3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital_project3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210612193116_Appointment_Patient_relationship")]
    partial class Appointment_Patient_relationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hospital_project3.Models.AppointmentModel", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Date_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientId");

                    b.HasIndex("PhysicianId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Hospital_project3.Models.DepartmentModel", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PhysicianId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hospital_project3.Models.PatientModel", b =>
                {
                    b.Property<int>("NationalID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Hospital_project3.Models.PhysicianModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Physicians");
                });

            modelBuilder.Entity("Hospital_project3.Models.AppointmentModel", b =>
                {
                    b.HasOne("Hospital_project3.Models.PatientModel", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_project3.Models.PhysicianModel", "Physician")
                        .WithMany("appointments")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Physician");
                });

            modelBuilder.Entity("Hospital_project3.Models.DepartmentModel", b =>
                {
                    b.HasOne("Hospital_project3.Models.PhysicianModel", "Physician")
                        .WithMany("Departments")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Physician");
                });

            modelBuilder.Entity("Hospital_project3.Models.PatientModel", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Hospital_project3.Models.PhysicianModel", b =>
                {
                    b.Navigation("appointments");

                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
